{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farsh\\\\OneDrive\\\\Desktop\\\\reactEx5\\\\src\\\\components\\\\CommentArea.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport CommentList from './CommentList';\nimport AddComment from './AddComment';\nimport Loading from './Loading';\nimport Error from './Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentArea = props => {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const [isLoading, setIsloading] = useState(false);\n  const [isError, setIserror] = useState(false);\n  useEffect(() => {\n    fetchIt();\n  }, [props.asin]);\n\n  const fetchIt = async () => {\n    setIsloading(true);\n\n    try {\n      let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + props.asin, {\n        headers: {\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MGI3OWY5NTgxNmI1YjAwMTU5NDA3NDAiLCJpYXQiOjE2MjI2NDY2NzcsImV4cCI6MTYyMzg1NjI3N30.y-rBwB5WAQOWBvWrLlAgTQUrbGulxd2M6cWH3VLyGLw'\n        }\n      });\n      console.log(response);\n\n      if (response.ok) {\n        let comments = await response.json();\n        setComments(comments);\n        setIsloading(false);\n        setIserror(false);\n      } else {\n        console.log('error');\n        setIsloading(false);\n        setIserror(true);\n      }\n    } catch (error) {\n      console.log(error);\n      setIsloading(false);\n      setIserror(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 31\n    }, this), isError && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n      asin: props.asin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      commentsToShow: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CommentArea, \"sFuUI0v/AVNo9ikIkalMyEH6nIg=\");\n\n_c = CommentArea;\nexport default CommentArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentArea\");","map":{"version":3,"sources":["C:/Users/farsh/OneDrive/Desktop/reactEx5/src/components/CommentArea.jsx"],"names":["useEffect","useState","CommentList","AddComment","Loading","Error","CommentArea","props","comments","setComments","isLoading","setIsloading","isError","setIserror","fetchIt","asin","response","fetch","headers","Authorization","console","log","ok","json","error"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,WAAW,GAAGC,KAAD,IAAS;AAAA;;AAExB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBR,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACS,SAAD,EAAWC,YAAX,IAA2BV,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACW,OAAD,EAASC,UAAT,IAAuBZ,QAAQ,CAAC,KAAD,CAArC;AAEAD,EAAAA,SAAS,CACL,MAAK;AACDc,IAAAA,OAAO;AACV,GAHI,EAGH,CAACP,KAAK,CAACQ,IAAP,CAHG,CAAT;;AAMA,QAAMD,OAAO,GAAG,YAAY;AACpBH,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AACA,UAAIK,QAAQ,GAAG,MAAMC,KAAK,CAAC,yDAAyDV,KAAK,CAACQ,IAAhE,EAAsE;AAC5FG,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAE;AADV;AADmF,OAAtE,CAA1B;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,UAAIA,QAAQ,CAACM,EAAb,EAAiB;AACb,YAAId,QAAQ,GAAG,MAAMQ,QAAQ,CAACO,IAAT,EAArB;AACAd,QAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OALD,MAKO;AACHO,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAV,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,KAjBD,CAiBE,OAAOW,KAAP,EAAc;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACR,GAxBD;;AA0BI,sBACI;AAAA,eACKH,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADlB,EAEKE,OAAO,iBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFhB,eAGI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEL,KAAK,CAACQ;AAAxB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,WAAD;AAAa,MAAA,cAAc,EAAEP;AAA7B;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA9CL;;GAAMF,W;;KAAAA,W;AAgDN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport CommentList from './CommentList'\r\nimport AddComment from './AddComment'\r\nimport Loading from './Loading'\r\nimport Error from './Error'\r\n\r\nconst CommentArea =(props)=>{\r\n\r\n    const [comments,setComments] = useState([]);\r\n    const [isLoading,setIsloading] = useState(false);\r\n    const [isError,setIserror] = useState(false);\r\n\r\n    useEffect(\r\n        () =>{\r\n            fetchIt();\r\n        },[props.asin]\r\n    )\r\n\r\n    const fetchIt = async () => {\r\n            setIsloading(true)\r\n            try {\r\n                let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + props.asin, {\r\n                    headers: {\r\n                        Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MGI3OWY5NTgxNmI1YjAwMTU5NDA3NDAiLCJpYXQiOjE2MjI2NDY2NzcsImV4cCI6MTYyMzg1NjI3N30.y-rBwB5WAQOWBvWrLlAgTQUrbGulxd2M6cWH3VLyGLw'\r\n                    }\r\n                })\r\n                console.log(response)\r\n                if (response.ok) {\r\n                    let comments = await response.json()\r\n                    setComments(comments) \r\n                    setIsloading(false)\r\n                    setIserror(false)\r\n                } else {\r\n                    console.log('error')\r\n                    setIsloading(false) \r\n                    setIserror(true)\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                setIsloading(false) \r\n                setIserror(true)\r\n            }\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {isLoading && <Loading />}\r\n                {isError && <Error />}\r\n                <AddComment asin={props.asin} />\r\n                <CommentList commentsToShow={comments} />\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default CommentArea"]},"metadata":{},"sourceType":"module"}